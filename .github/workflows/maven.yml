name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:

  workflow_dispatch:

jobs:
  MacOS-Build:
    strategy:
      fail-fast: true
      matrix:
        architecture:
        - name: x86_64
        - name: aarch64
        java_version: [ 8, 11, 17, 21 ]

    name: MacOS-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java_version }}
          architecture: 'x64'

      - name: Build
        run: mvn -B -V -ntp --file pom.xml -P osx-${{ matrix.architecture.name }} clean package

      - name: Upload build
        if: ${{ matrix.java_version == 8 }}
        uses: actions/upload-artifact@v4
        with:
          name: MacOS-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
          path: .

  Linux-Build:
    strategy:
      fail-fast: true
      matrix:
        architecture:
          - name: x86_64
            linux_name: x86-64-linux-gnu
            exec_name: x86-64-linux-gnu
          - name: x86
            linux_name: i686-linux-gnu
            exec_name: i686-linux-gnu
          - name: aarch64
            linux_name: aarch64-linux-gnu
            exec_name: aarch64-linux-gnu
          - name: armv7
            linux_name: arm-linux-gnueabi
            exec_name: arm-linux-gnueabi
          - name: ppc64le
            linux_name: powerpc64le-linux-gnu
            exec_name: powerpc64le-linux-gnu
          - name: riscv64
            linux_name: riscv64-linux-gnu
            exec_name: riscv64-linux-gnu
          - name: s390x
            linux_name: s390x-linux-gnu
            exec_name: s390x-linux-gnu
        java_version: [ 8,11,17,21 ]

    name: Linux-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java_version }}
          architecture: 'x64'

      - name: Install GCC
        run: |
          sudo apt-get install -y gcc-${{ matrix.architecture.linux_name }} g++-${{ matrix.architecture.linux_name }}
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/${{ matrix.architecture.exec_name}}-gcc 200
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/${{ matrix.architecture.exec_name}}-g++ 200

      - name: Build
        run: mvn -B -V -ntp --file pom.xml -P linux-${{ matrix.architecture.name }} clean package

      - name: Upload build
        if: ${{ matrix.java_version == 8 }}
        uses: actions/upload-artifact@v4
        with:
          name: Linux-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
          path: .

  Windows-Build:
    strategy:
      fail-fast: true
      matrix:
        architecture:
          - name: x86_64
            msvc_code: x64
          - name: x86
            msvc_code: x64_x86
          - name: aarch64
            msvc_code: x64_arm64
          - name: armv7
            msvc_code: x64_arm
        java_version: [ 8, 11, 17, 21 ]

    name: Windows-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java_version }}
          architecture: 'x64'

      - name: Enable compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.architecture.msvc_code }}

      - name: Build
        run: mvn -B -V -ntp --file pom.xml -P windows-${{ matrix.architecture.name }} clean package

      - name: Upload build
        if: ${{ matrix.java_version == 8 }}
        uses: actions/upload-artifact@v4
        with:
          name: Windows-${{ matrix.architecture.name }}-Build-JDK${{ matrix.java_version }}
          path: .